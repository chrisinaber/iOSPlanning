// Extract 1
// code to go into the returnToMainScreen, in the new View Controller class
dismissViewControllerAnimated(true, completion: nil)


// Extract 2
// for the new View Controller class
import AVFoundation // put this at the top, before the class statement

// put the following as methods in body of the class
var settings: SpeechSettings? {
    didSet {
        self.initialiseValues()
    }
}

func initialiseValues() {

    // the following line checks if we have any settings
    if let speechSettings = self.settings {

        // the following line checks if the UI is setup
        if self.rateSlider != nil {

            self.rateSlider.minimumValue = AVSpeechUtteranceMinimumSpeechRate
            self.rateSlider.maximumValue = AVSpeechUtteranceMaximumSpeechRate
            self.rateSlider.value = speechSettings.rate

            self.volumeSlider.value = speechSettings.volume

            initialiseVoiceForUISegmentedControl(speechSettings.voice)
        }
    }
}

func initialiseVoiceForUISegmentedControl(voice: String) {
    if voice == "en-US" {
        self.voiceSegment.selectedSegmentIndex = 0
    }
    else {
        self.voiceSegment.selectedSegmentIndex = 1
    }
}

// Extract 3

let speechSettings = SpeechSettings()

override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {

    if let controller = segue.destinationViewController as? SpeechSettingsViewController {
        controller.settings = speechSettings
    }
}

// Extract 4
self.settings?.rate = self.rateSlider.value
self.settings?.volume = self.volumeSlider.value

self.settings?.voice =
    self.voiceSegment.titleForSegmentAtIndex(self.voiceSegment.selectedSegmentIndex)!

// Extract 5
UIPickerViewDataSource, UIPickerViewDelegate

// Extract 6
self.voicePicker.dataSource = self
self.voicePicker.delegate = self

// Extract 7
func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
    return AVSpeechSynthesisVoice.speechVoices()[row].language
}

func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int {
    return 1
}

func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
    return AVSpeechSynthesisVoice.speechVoices().count
}

// Extract 7
func initialiseVoiceForUIPicker(voice: String) {

    for index in 0..<AVSpeechSynthesisVoice.speechVoices().count {
        if AVSpeechSynthesisVoice.speechVoices()[index].language == voice {
            voicePicker.selectRow(index, inComponent: 0, animated: true)
        }
    }
}

// Extract 9
let selectedIndex = self.voicePicker.selectedRowInComponent(0)
self.settings?.voice = AVSpeechSynthesisVoice.speechVoices()[selectedIndex].language